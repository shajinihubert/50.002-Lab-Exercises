.include "C:/Users/User/Documents/50.002/50002/nominal.jsim"
.include "C:/Users/User/Documents/50.002/50002/stdcell.jsim"
.include "C:/Users/User/Documents/50.002/50002/lab6ctl.jsim"

.subckt ctl reset id[31:26] ra2sel bsel alufn[5:0] wdsel[1:0] werf moe wr
xctl vdd 0 0 id[31:26]
    + pcsel[2:0] wasel asel ra2sel bsel alufn[5:0] 
    + wdsel[1:0] werf moe xwr
    + $memory width=18 nlocations=64 contents=(

        + 0b000000000000000000    // 0
        + 0b000000000000000000    // 1
        + 0b000000000000000000    // 2
        + 0b000000000000000000    // 3
        + 0b000000000000000000    // 4
        + 0b000000000000000000    // 5
        + 0b000000000000000000    // 6
        + 0b000000000000000000    // 7
        + 0b000000000000000000    // 8
        + 0b000000000000000000    // 9 
        + 0b000000000000000000    // 10

        + 0b000000000000000000    // 11
        + 0b000000000000000000    // 12
        + 0b000000000000000000    // 13
        + 0b000000000000000000    // 14
        + 0b000000000000000000    // 15
        + 0b000000000000000000    // 16
        + 0b000000000000000000    // 17
        + 0b000000000000000000    // 18
        + 0b000000000000000000    // 19
        + 0b000000000000000000    // 20

        + 0b000000000000000000    // 21
        + 0b000000000000000000    // 22
        + 0b000000000000000000    // 23
        + 0b000000100000010110    // 24 LD
        + 0b000001100000000001    // 25 ST
        + 0b000000000000000000    // 26 
        + 0b000000000000000000    // 27 
        + 0b000000000000000000    // 28 
        + 0b000000000000000000    // 29 
        + 0b000000000000000000    // 30 

        + 0b000000000000000000    // 31 
        + 0b000000000000001100    // 32 ADD
        + 0b000000000000101100    // 33 SUB
        + 0b000000000000000000    // 34 
        + 0b000000000000000000    // 35 
        + 0b000000011001101100    // 36 CMPEQ
        + 0b000000011010101100    // 37 CMPLT
        + 0b000000011011101100    // 38 CMPLE
        + 0b000000000000000000    // 39 
        + 0b000000001100001100    // 40 AND

        + 0b000000001111001100    // 41 OR
        + 0b000000001011001100    // 42 XOR
        + 0b000000000000000000    // 43 
        + 0b000000010000001100    // 44 SHL
        + 0b000000010000101100    // 45 SHR
        + 0b000000010001101100    // 46 SRA
        + 0b000000000000000000    // 47 
        + 0b000000100000001100    // 48 ADDC
        + 0b000000100000101100    // 49 SUBC
        + 0b000000000000000000    // 50 

        + 0b000000000000000000    // 51 
        + 0b000000111001101100    // 52 CMPEQC
        + 0b000000111010101100    // 53 CMPLTC
        + 0b000000111011101100    // 54 CMPLEC
        + 0b000000000000000000    // 55       
        + 0b000000101100001100    // 56 ANDC
        + 0b000000101111001100    // 57 ORC
        + 0b000000101011001100    // 58 XORC
        + 0b000000000000000000    // 59
        + 0b000000110000001100    // 60 SHLC

        + 0b000000110000101100    // 61 SHRC
        + 0b000000110001101100    // 62 SRAC
        + 0b000000000000000000    // 63      
        + )

xmux reset xwr 0 wr mux2

.ends